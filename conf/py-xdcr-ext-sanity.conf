xdcr.uniXDCR.unidirectional:
    #Incremental Load with ops
    load_with_async_ops,items=100000,rdirection=unidirection,ctopology=chain,update=C1,delete=C1,sasl_buckets=1,replication_type=xmem,GROUP=CHAIN;P0;xmem
xdcr.biXDCR.bidirectional:
    #Incremental ops on joint sets
    load_with_async_ops_and_joint_sets,items=10000,ctopology=chain,rdirection=bidirection,sasl_buckets=1,replication_type=xmem,GROUP=P0;xmem
    # Test scram-sha with bixdcr
    test_scramsha,demand_encryption=1,use_scramsha=1,rdirection=bidirection,GROUP=P0
xdcr.checkpointXDCR.XDCRCheckpointUnitTest:
    # Simple mutate and checkpoint with no topology changes
    mutate_and_checkpoint,rdirection=unidirection,topology=chain,replication_type=xmem
xdcr.compressionXDCR.compression:
    test_compression_with_unixdcr_incr_load,items=10000,rdirection=unidirection,ctopology=chain,update=C1,delete=C1,default_bucket=False,standard_buckets=2,replication_type=xmem,GROUP=P0
xdcr.filterXDCR.XDCRFilterTests:
    # Simple uni-xdcr with filter
    test_xdcr_with_filter,items=50000,rdirection=unidirection,ctopology=chain,replication_type=xmem,default@C1=filter_expression:REGEXP_CONTAINS(META()dotidcomma'abcd'),failure_restart_interval:20,timeout_percentage:60,GROUP=P0
xdcr.lww.Lww:
    test_lww_enable
    test_replication_with_lww_default,items=1000
xdcr.nwusageXDCR.nwusage:
    test_nwusage_with_unidirection,items=10000,value_size=1024,nw_limit=1,rdirection=unidirection,ctopology=chain,update=C1,delete=C1,replication_type=xmem,GROUP=P0
xdcr.pauseResumeXDCR.PauseResumeTest:
    # Test if pause doesn't affect inbound xdcr or other replications
    pause_resume_single_bucket,items=50000,standard_buckets=1,sasl_buckets=1,rdirection=bidirection,ctopology=chain,replication_type=xmem,pause=C1-C2,GROUP=P0
xdcr.rebalanceXDCR.Rebalance:
    #UNIDIRECITONAL XDCR with REBALANCE
    #Rebalance In
    async_rebalance_in,items=100000,rdirection=unidirection,ctopology=chain,update=C1,delete=C1,rebalance=C2,num_rebalance=2,GROUP=P0;xmem
    #Rebalance Out
    async_rebalance_out,items=100000,rdirection=unidirection,ctopology=chain,update=C1,delete=C1,rebalance=C2,num_rebalance=1,GROUP=P1
    #Swap Rebalance
    swap_rebalance,items=10000,rdirection=unidirection,ctopology=chain,update=C1,delete=C1,rebalance=C2,GROUP=P0;xmem
