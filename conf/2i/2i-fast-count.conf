tuqquery.tuq_sanity.QuerySanityTests:
    test_fast_count,index_to_be_created=CREATE INDEX `idx1` ON `default`(`name`,`age`),query_to_be_run=select count(STAR) from default where name is not missing
    test_fast_count,index_to_be_created=CREATE INDEX `idx1` ON `default`(`name`,`age`),query_to_be_run=select count(name) from default where name is not missing
    test_fast_count,index_to_be_created=CREATE INDEX `idx1` ON `default`(`name`,`age`),query_to_be_run=select count(1) from default where name is not missing
    test_fast_count,index_to_be_created=CREATE INDEX `idx1` ON `default`(`name`,`age`),query_to_be_run=select count(STAR) from default where name > "pymc1000"
    test_fast_count,index_to_be_created=CREATE INDEX `idx1` ON `default`(`name`,`age`),query_to_be_run=select count(age) from default where name is not missing
    test_fast_count,index_to_be_created=CREATE INDEX `idx1` ON `default`(`name`,`age`),query_to_be_run=select count(distinct name) from default where name is not missing
    test_primary_count,query_to_be_run=select count(STAR) from default
    test_fast_count,index_to_be_created=CREATE INDEX `idx1` ON `default`(`age`) where age EQUALS 30,query_to_be_run=select count(STAR) from default where age EQUALS 30
    test_fast_count,index_to_be_created=CREATE INDEX `idx1` ON `default`(`age`) where age > 30,query_to_be_run=select count(STAR) from default where age > 30
    test_fast_count,index_to_be_created=CREATE INDEX `idx1` ON `default`(`name`,`age`) where name EQUALS "Sara" and age EQUALS 30,query_to_be_run=select count(STAR) from default where name EQUALS "Sara" and age EQUALS 30
    test_fast_count,index_to_be_created=CREATE INDEX `idx1` ON `default`(`name`,`age`) where name EQUALS "Sara" or age EQUALS 30,query_to_be_run=select count(STAR) from default where name EQUALS "Sara" or age EQUALS 30
    test_fast_count,index_to_be_created=CREATE INDEX `idx1` ON `default`(`name`,`age`) partition by hash(meta().id),query_to_be_run=select count(STAR) from default where name is not missing
    test_fast_count,index_to_be_created=CREATE INDEX `idx1` ON `default`(`name`,`age`) partition by hash(age),query_to_be_run=select count(STAR) from default where name is not missing
    test_fast_count,index_to_be_created=CREATE INDEX idx_flight_stops ON `travel-sample` ( stops, DISTINCT ARRAY v.flight FOR v IN schedule END ) WHERE type EQUALS "route",query_to_be_run=SELECT count(STAR) FROM `travel-sample` WHERE stops>0 and type EQUALS "route" AND ANY x in schedule SATISFIES x.flight IS NOT NULL END,load_sample=True