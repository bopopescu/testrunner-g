subdoc.subdoc_scenario_tests.SubdocScenarioTests:
# test with couchbase bucket flush
    test_couchbase_bucket_flush,GROUP=BUCKET-FLUSH;P0
# test with couchbase bucket compaction
    test_couchbase_bucket_compaction,nodes_init=5,nodes_in=1,initial=,before=create_index,after=query_ops,groups=simple,dataset=default,doc-per-day=10,services_init=n1ql:kv-kv-kv-index-index,GROUP=COMPACTIION;P0
# test with warm up
    test_warmup,nodes_init=5,nodes_in=1,services_init=n1ql:kv-kv-kv-index-index,GROUP=WARMUP;P0
# test with rebalance-in
    test_rebalance_in,initial=,nodes_init=3,nodes_in=1,GROUP=REB-IN;P0
    test_rebalance_in,initial=,nodes_init=3,nodes_in=2,GROUP=REB-IN;P0
# test with rebalance-out
    test_rebalance_out,nodes_init=5,nodes_out=1,targetMaster=True,GROUP=REB-OUT;P0
    test_rebalance_out,nodes_init=5,nodes_out=2,GROUP=REB-OUT;P0
# test with rebalance-in-out
    test_rebalance_in_out,nodes_in=1,nodes_out=1,nodes_init=5,GROUP=REB-IN-OUT;P0
    test_rebalance_in_out,nodes_in=2,nodes_out=2,nodes_init=5,GROUP=REB-IN-OUT;P0
# test with hard failover
    test_failover,nodes_init=5,nodes_out=1,targetMaster=True,GROUP=HARD-FAILOVER;P0
    test_failover,nodes_init=5,nodes_out=1,GROUP=HARD-FAILOVER;P0
    test_failover,nodes_init=5,nodes_out=2,GROUP=HARD-FAILOVER;P0
# test with graceful failover
    test_failover,nodes_init=5,nodes_out=1,graceful=True,targetMaster=True,GROUP=GRACEFUL;P0
    test_failover,nodes_init=5,nodes_out=2,graceful=True,targetMaster=True,GROUP=GRACEFUL;P0
# test with failover and add-back recovery
    test_failover_add_back,nodes_init=4,nodes_out=1,graceful=False,targetMaster=True,GROUP=FAILOVER-ADDBACK;P0
    test_failover_add_back,nodes_init=5,nodes_out=1,nodes_out_dist=kv:1,graceful=False,GROUP=FAILOVER-ADDBACK;P0
    test_failover_add_back,recoveryType=delta,nodes_init=4,nodes_out=1,graceful=False,targetMaster=True,GROUP=FAILOVER-ADDBACK;P0
    test_failover_add_back,recoveryType=delta,nodes_init=5,nodes_out=1,graceful=False,recoveryType=delta,GROUP=FAILOVER-ADDBACK;P0