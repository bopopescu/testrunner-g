ui.uisampletests.InitializeTest:
     test_initialize,agree_terms=True,indeces_path=\tmp,ram_quota_node=300,sample=beer-sample,ram_quota=100,num_replica=2,GROUP=LINUX
     test_initialize,agree_terms=True,indeces_path=\tmp,ram_quota_node=300,ram_quota=100,num_replica=2,first_name=First,last_name=Last,password_confirm=password,password=password,GROUP=LINUX
     test_initialize,agree_terms=True,indeces_path=c:\tmp,ram_quota_node=300,sample=beer-sample,ram_quota=100,num_replica=2,GROUP=WINDOWS
     test_initialize,agree_terms=True,indeces_path=c:\tmp,ram_quota_node=300,ram_quota=100,num_replica=2,first_name=First,last_name=Last,password_confirm=password,password=password,GROUP=WINDOWS
     test_initialize,agree_terms=True,indeces_path=c:\tmp,ram_quota_node=300,sample=beer-sample,ram_quota=100,num_replica=0,GROUP=WINDOWS
ui.uisampletests.BucketTests:
    test_add_bucket,name=bucket0,ram_quota=100,type=Couchbase,port=9000,index_replica=true,num_replica=2,GROUP=LINUX;WINDOWS
    test_bucket_stats_mb_8538,GROUP=LINUX;WINDOWS,descr=per Alk:This is expected. Temporary files used during index building/updating are not accounted for per-ddoc.
    test_bucket_stats_connections,GROUP=LINUX;WINDOWS,descr=disabled as per discussion in MB-20129
    test_add_bucket_with_ops,meta_data=Value-only,GROUP=LINUX;WINDOWS
    test_add_bucket_with_ops,meta_data=Full,GROUP=LINUX;WINDOWS
    test_add_bucket_with_ops,io_priority=Default,GROUP=LINUX;WINDOWS
    test_add_bucket_with_ops,io_priority=High,GROUP=LINUX;WINDOWS
    test_add_bucket_with_ops,frag_percent_cb=True,error=database fragmentation is too small. Allowed range is 2 - 100,GROUP=LINUX;WINDOWS
    test_add_bucket_with_ops,frag_percent=1,error=database fragmentation is too small. Allowed range is 2 - 100,GROUP=LINUX;WINDOWS
    test_add_bucket_with_ops,frag_mb_cb=True,error=database fragmentation size is too small. Allowed range is 1 - infinity,GROUP=LINUX;WINDOWS
    test_add_bucket_with_ops,frag_mb=300,purge_interval=50,GROUP=LINUX;WINDOWS
    test_add_bucket_with_ops,frag_percent=60,purge_interval=50,GROUP=LINUX;WINDOWS
    test_add_bucket_with_ops,view_frag_percent_cb=True,error=view fragmentation is too small. Allowed range is 2 - 100,GROUP=LINUX;WINDOWS
    test_add_bucket_with_ops,view_frag_percent=1,error=view fragmentation is too small. Allowed range is 2 - 100,GROUP=LINUX;WINDOWS
    test_add_bucket_with_ops,view_frag_percent=50,purge_interval=50,GROUP=LINUX;WINDOWS
    test_add_bucket_with_ops,view_frag_mb_cb=True,error=view fragmentation size is too small. Allowed range is 1 - infinity,GROUP=LINUX;WINDOWS
    test_add_bucket_with_ops,view_frag_mb=1,error=view fragmentation size is too small. Allowed range is 1 - infinity,GROUP=LINUX;WINDOWS
    #UI element changed for these two testcases and they are not detected by selenium
    #test_add_bucket_with_ops,comp_allowed_period_cb=True,error=from hour must be an integer,GROUP=LINUX;WINDOWS
    #test_add_bucket_with_ops,comp_allowed_period_start_h=7,error=from minute must be an integer,GROUP=LINUX;WINDOWS
    test_add_bucket_with_ops,comp_allowed_period_start_h=1,comp_allowed_period_start_min=30,comp_allowed_period_end_h=2,comp_allowed_period_end_min=10,purge_interval=50,GROUP=LINUX;WINDOWS
    test_add_bucket_with_ops,purge_interval=50,GROUP=LINUX;WINDOWS
    test_add_bucket_with_ops,purge_interval=100,error=metadata purge interval is too large. Allowed range is 0.04 - 60,GROUP=LINUX;WINDOWS
    test_add_bucket_with_ops,purge_interval=' ',error=metadata purge interval must be a number,GROUP=LINUX;WINDOWS
ui.uisampletests.DocumentsTest:
    test_create_doc,GROUP=LINUX;WINDOWS
    test_search_doc,GROUP=LINUX;WINDOWS
    test_edit_doc,action=save,GROUP=LINUX;WINDOWS
    test_edit_doc,new_doc_name=new_name,action=save_as,GROUP=LINUX;WINDOWS
    test_edit_doc,new_doc_name=new_name,doc_content=asd:asd,action=save,error='Error: Unexpected token a in JSON at position 0 (Invalid document)',GROUP=LINUX;WINDOWS
    test_edit_doc_from_views_screen,GROUP=LINUX;WINDOWS
ui.uisampletests.SettingsTests:
    test_alerts,GROUP=LINUX;WINDOWS;MULTINODE
ui.uisampletests.ROuserTests:
    test_read_only_user,GROUP=LINUX;WINDOWS
    test_delete_read_only_user,skip_preparation=True,GROUP=LINUX;WINDOWS
    #MB-24688
    test_negative_read_only_user,skip_preparation=True,username=Administrator,password=password,error=Read-only user cannot be same user as administrator,GROUP=LINUX;WINDOWS,descr=MB-8790
    test_negative_read_only_user,skip_preparation=True,username='!@#@$#%',error='The username must not contain spaces, control or any of ()<>@,;:\\"/[]?={} characters and must be valid utf8',GROUP=LINUX;WINDOWS
    test_negative_read_only_user,skip_preparation=True,username='my_ro_user',password='123',error='The password must be at least 6 characters long.',GROUP=LINUX;WINDOWS
    test_negative_read_only_user,skip_preparation=True,username='my_ro_user',password='password',verify_password='massword',error=[u"'Password' and 'Verify Password' do not match"],GROUP=LINUX;WINDOWS
## test if any message in log page
ui.uisampletests.ExternalUserTests:
    test_external_user,username=admin,full_name=full_admin,roles=Admin,GROUP=LINUX;WINDOWS
    test_external_user,username=all_admins,full_name=full_admin,roles=Admin,mode=disable,GROUP=LINUX;WINDOWS
    test_external_user,username=no_roles,full_name=full_admin,roles=,mode=enable,expected_error=at least one role should be added,GROUP=LINUX;WINDOWS
    test_external_user,username=,full_name=full_admin,roles=Admin,mode=enable,expected_error=username is required,GROUP=LINUX;WINDOWS
    test_external_user,username=,full_name=,roles=,expected_error=username is required,GROUP=LINUX;WINDOWS
    #TODO add mo cases to cover list of roles, like: roles=Admin;Read Only Admin;Cluster Admin;Bucket Admin[@];Bucket Admin[default];Views Admin[@];Views Admin[default];Replication Admin
    test_external_user,username=all_roles,full_name=,roles=Read Only Admin,mode=enable,GROUP=LINUX;WINDOWS
buckettests.CreateBucketTests:
    test_log_message_in_log_page,log_message="Moxi restarting",nodes_init=2
    test_log_message_in_log_page,log_message="client-side error",nodes_init=2
ui.uisampletests.GracefullFailoverTests:
    test_failover,GROUP=LINUX;WINDOWS
    test_failover,confirm_failover=False,GROUP=LINUX;WINDOWS
    test_failover_multiply_nodes,nodes_init=3,replica=2,GROUP=LINUX;WINDOWS
    test_failover_multiply_nodes,nodes_init=3,replica=2,graceful="false;true",GROUP=LINUX;WINDOWS
    test_failover_multiply_nodes,nodes_init=3,replica=1,graceful="false;true",BUGS=MB_10483_confuse_in_Confirm_node_Fail_Over_dialog,GROUP=LINUX;WINDOWS
    test_failover_multiply_nodes,nodes_init=3,replica=1,graceful="true;true",BUGS=MB_10483_confuse_in_Confirm_node_Fail_Over_dialog,GROUP=LINUX;WINDOWS
    test_failover_multiply_nodes,nodes_init=3,replica=1,graceful="true;false",BUGS=MB_10483_confuse_in_Confirm_node_Fail_Over_dialog,GROUP=LINUX;WINDOWS
    test_delta_recovery_failover,nodes_init=2,GROUP=LINUX;WINDOWS
    test_delta_recovery_failover,nodes_init=2,confirm_recovery=false,GROUP=LINUX;WINDOWS
    test_delta_recovery_failover,nodes_init=2,option=full,GROUP=LINUX;WINDOWS
ui.uisampletests.RebalanceProgressTests:
    test_rebalance_in,GROUP=LINUX;WINDOWS
ui.uixdcrtests.XDCRTests:
    test_create_replication,GROUP=LINUX;WINDOWS
    test_cancel_create_replication,GROUP=LINUX;WINDOWS
    test_cancel_create_reference,GROUP=LINUX;WINDOWS
    test_create_reference,name=,error=Attention - cluster name is missing,GROUP=LINUX;WINDOWS
    test_create_reference,ip_to_replicate=,error=Attention - hostname (ip) is missing,GROUP=LINUX;WINDOWS
    test_create_reference,user=' ',error=Authentication failed,GROUP=LINUX;WINDOWS
    test_create_reference,passwd=,error=Attention - password is missing,GROUP=LINUX;WINDOWS
    test_create_reference,ip_to_replicate=abd,error=Attention - Could not connect to "abd" on port 8091. This could be due to an incorrect host/port combination or a firewall in place between the servers.,GROUP=LINUX;WINDOWS
    test_create_reference,user=user,error=Authentication failed,GROUP=LINUX;WINDOWS
    test_create_reference,passwd=pwd,error=Authentication failed,GROUP=LINUX;WINDOWS
    test_create_reference,GROUP=LINUX;WINDOWS
    test_create_replication,src_bucket=,error=source bucket cannot be empty,GROUP=LINUX;WINDOWS,name=auto1
    test_create_replication,dest_bucket=,error=target bucket cannot be empty,GROUP=LINUX;WINDOWS,name=auto2
    test_create_replication,dest_cluster=,error=target cluster cannot be empty,GROUP=LINUX;WINDOWS,name=auto3
    test_create_replication,advanced_settings=version:capi,GROUP=LINUX;WINDOWS,name=auto4
    test_create_replication,advanced_settings=checkpoint_interval:0,error=The value must be an integer between 60 and 14400,GROUP=LINUX;WINDOWS,name=auto5
    test_create_replication,advanced_settings=checkpoint_interval:20000,error=The value must be an integer between 60 and 14400,GROUP=LINUX;WINDOWS,name=auto6
    test_create_replication,advanced_settings=batch_count:499,error=The value must be an integer between 500 and 10000,GROUP=LINUX;WINDOWS,name=auto7
    test_create_replication,advanced_settings=batch_size:0,error=The value must be an integer between 10 and 10000,GROUP=LINUX;WINDOWS,name=auto8
    test_create_replication,advanced_settings=retry_interval:0,error=The value must be an integer between 1 and 300,GROUP=LINUX;WINDOWS,name=auto9
    test_create_replication,advanced_settings=replication_threshold:50000000,error=The value must be an integer between 0 and 20971520,GROUP=LINUX;WINDOWS,name=auto10
    test_create_replication,advanced_settings=source_nozzle_per_node:0,error=The value must be an integer between 1 and 100,GROUP=LINUX;WINDOWS,name=auto11
    test_create_replication,advanced_settings=source_nozzle_per_node:50,GROUP=LINUX;WINDOWS,name=auto12
    test_create_replication,advanced_settings=source_nozzle_per_node:101,error=The value must be an integer between 1 and 100,GROUP=LINUX;WINDOWS,name=auto13
    test_create_replication,advanced_settings=target_nozzle_per_node:0,error=The value must be an integer between 1 and 100,GROUP=LINUX;WINDOWS,name=auto14
    test_create_replication,advanced_settings=target_nozzle_per_node:50,GROUP=LINUX;WINDOWS,name=auto15
    test_create_replication,advanced_settings=target_nozzle_per_node:101,error=The value must be an integer between 1 and 100,GROUP=LINUX;WINDOWS,name=auto16
    test_create_replication,advanced_settings=replication_threshold:-1,error=The value must be an integer between 0 and 20971520,GROUP=LINUX;WINDOWS,name=auto17
    test_create_replication,advanced_settings=replication_threshold:5000,GROUP=LINUX;WINDOWS,name=auto18
    test_create_replication,advanced_settings=collection_interval:100,error=The value must be an integer between 200 and 600000,GROUP=LINUX;WINDOWS,name=auto19
    test_create_replication,advanced_settings=collection_interval:10000,GROUP=LINUX;WINDOWS,name=auto20
    test_create_replication,advanced_settings=collection_interval:700000,error=The value must be an integer between 200 and 600000,GROUP=LINUX;WINDOWS,name=auto21
    test_create_replication,advanced_settings=logging:Debug,GROUP=LINUX;WINDOWS,name=auto22
    test_create_replication,advanced_settings=logging:Trace,GROUP=LINUX;WINDOWS,name=auto23
    test_create_replication,advanced_settings=logging:Error,GROUP=LINUX;WINDOWS,name=auto24
    test_create_replication,advanced_settings=checkpoint_interval:10000,GROUP=LINUX;WINDOWS,name=auto25
    test_create_replication,advanced_settings=batch_count:1000,GROUP=LINUX;WINDOWS,name=auto26
    test_create_replication,advanced_settings=batch_size:5000,GROUP=LINUX;WINDOWS,name=auto27
    test_create_replication,advanced_settings=retry_interval:150,GROUP=LINUX;WINDOWS,name=auto28
ui.uisampletests.ViewsTests:
    test_add_dev_view,GROUP=LINUX;WINDOWS
    test_add_prod_view,GROUP=LINUX;WINDOWS
    test_delete_view,GROUP=LINUX;WINDOWS
    test_edit_view,GROUP=LINUX;WINDOWS
    test_edit_view,action=save_as,GROUP=LINUX;WINDOWS
    test_show_view_results,GROUP=LINUX;WINDOWS
    test_show_view_results_with_reduce,reduce_fn=_count,GROUP=LINUX;WINDOWS
    test_show_view_results_with_reduce,reduce_fn=_sum,GROUP=LINUX;WINDOWS
    test_show_view_results_with_reduce,reduce_fn=_stats,GROUP=LINUX;WINDOWS
ui.uirebalancetests.RebalanceTests:
    test_rebalance_in
    test_rebalance_out
    test_rebalance_swap
    test_stop_rebalance
    test_restart_rebalance
    test_incrimental_rebalance
ui.uiftstests.FTSTests:
    test_create_simple_fts_index,GROUP=LINUX;WINDOWS
ui.uiqueryworkbench.QueryWorkbenchTests:
  test_create_indexes,mode=JSON,GROUP=LINUX;WINDOWS,check_query=CREATE PRIMARY INDEX beer_index_pr ON `beer` USING GSI,expected_result={ "results": [] }
    test_create_indexes,mode=JSON,GROUP=LINUX;WINDOWS,check_query=CREATE INDEX beer_index_sec on `beer`(meta().id),expected_result={ "results": [] }
    #MB-20833 test_create_indexes,mode=JSON,GROUP=LINUX;WINDOWS,check_query=,expected_result=\[\n  {\n    "code": 1050,\n    "msg": "No statement or prepared value"\n  }\n\]
    test_create_indexes,mode=JSON,GROUP=LINUX;WINDOWS,check_query=CREATE INDEX beer_index_sec on `beer`(meta().id) _SEM_ SELECT _STAR_ FROM system:indexes,expected_result={"error":"Error, you cannot issue more than one query at once. Please remove all text after \n    the semicolon closing the first query."}|{"error": "you cannot issue more than one query at once."}
    test_create_indexes,mode=JSON,GROUP=LINUX;WINDOWS,init_query=CREATE INDEX beer_index_sec on `beer`(meta().id),check_query=SELECT _STAR_ FROM system:indexes,expected_result={\n            "indexes": {\n                "datastore_id": "http://127.0.0.1:8091",\n                "id": "(\S+)",\n                "index_key": \[\n                    "\(meta\(\).`id`\)"\n                \],\n                "keyspace_id": "beer",\n                "name": "beer_index_sec",\n                "namespace_id": "default",\n                "state": "online",\n                "using": "gsi"\n            }\n        }|\[\n  {\n    "indexes": {\n      "datastore_id": "http://127.0.0.1:8091",\n      "id": "(\S+)",\n      "index_key": \[\n        "\(meta\(\).`id`\)"\n      \],\n      "keyspace_id": "beer",\n      "name": "beer_index_sec",\n      "namespace_id": "default",\n      "state": "online",\n      "using": "gsi"\n    }\n  }\n\]
    test_create_indexes,mode=JSON,GROUP=LINUX;WINDOWS,init_query=CREATE INDEX beer_index_sec on `beer`(meta().id),check_query=SELECT b.name, meta(b).id \nFROM `beer` b \nWHERE meta(b).id > "g" limit 1,expected_result=\[\n        {\n            "id": "g_heileman_brewing",\n            "name": "G. Heileman Brewing"\n        }\n    \]|\[\n  {\n    "id": "g_heileman_brewing",\n    "name": "G. Heileman Brewing"\n  }\n\]
    test_create_indexes,mode=JSON,GROUP=LINUX;WINDOWS,check_query=FAKE _SEM_,expected_result=\[\n  {\n    "code": 3000,\n    "msg": "syntax error - at ;",\n    "query_from_user": "FAKE ;"\n  }\n]
    #MB-20833 test_create_indexes,mode=JSON,GROUP=LINUX;WINDOWS,init_query=CREATE INDEX beer_index_sec on `beer`(meta().id),check_query=,expected_result=\[\n  {\n    "code": 1050,\n    "msg": "No statement or prepared value"\n  }\n\]
    test_create_indexes,mode=JSON,GROUP=LINUX;WINDOWS,check_query=FAKE,expected_result=\[\n  {\n    "code": 3000,\n    "msg": "Input was not a statement.",\n    "query_from_user": "fake"\n  }\n\]
    test_create_indexes,mode=Tree,GROUP=LINUX;WINDOWS,init_query=CREATE INDEX beer_index_sec on `beer`(meta().id),check_query=SELECT b.name, meta(b).id FROM `beer` b WHERE meta(b).id > "g" limit 1,expected_result=id g_heileman_brewing\nname G. Heileman Brewing
    test_create_indexes,mode=Plan,GROUP=LINUX;WINDOWS,init_query=CREATE INDEX beer_index_sec on `beer`(meta().id),check_query=SELECT b.name, meta(b).id FROM `beer` b WHERE meta(b).id > "g" limit 1,expected_result=Query Plan Summary:\nIndexes\nbeer.beer_index_sec\nBuckets\nbeer\nFields\nbeer.name\n\nQuery Operator Data Flows \(bottom to top\):\n\nLimit 1  \nFinalProject  \nInitialProject 2 terms  \nFilter  \nFetch beer as b  \nIndexScan beer.beer_index_sec  \n\n\nVisual Plan\n\nLimit\n1\nFinalProject\nInitialProject\n2 terms\nFilter\nFetch\nbeer as b\nIndexScan\nbeer.beer_index_sec
    test_create_indexes,mode=Plan Text,GROUP=LINUX;WINDOWS,init_query=CREATE INDEX beer_index_sec on `beer`(meta().id),check_query=SELECT b.name, meta(b).id FROM `beer` b WHERE meta(b).id > "g" limit 1,expected_result={\n  "plan": {\n    "#operator": "Sequence",\n    "~children": \[\n      {\n        "#operator": "Sequence",\n        "~children": \[\n          {\n            "#operator": "IndexScan",\n            "index": "beer_index_sec",\n            "index_id": "(\S+)",\n            "keyspace": "beer",\n            "limit": "1",\n            "namespace": "default"
    test_create_indexes,mode=Plan Text,GROUP=LINUX;WINDOWS,init_query=CREATE INDEX beer_index_sec on `beer`(meta().id),check_query=SELECT b.name, meta(b).id FROM `beer` b WHERE meta(b).id > "g" limit 1,summary_result=Status: success Elapsed: \d+.\d+ms Execution: \d+.\d+ms Result Count: 1 Result Size: 93
    test_bucket_analysis,GROUP=LINUX;WINDOWS,check_query=CREATE INDEX beer_index_sec on `beer`(meta().id),init_analysis=Fully Queryable Buckets\nQueryable on Indexed Fields\nNon-Indexed Buckets\n  beer|Fully Queryable Buckets\nQueryable on Indexed Fields\nNon-Indexed Buckets\nbeer,expected_analysis=Fully Queryable Buckets\nQueryable on Indexed Fields\nbeer\nNon-Indexed Buckets
    #test_save_query,GROUP=LINUX;WINDOWS
    #test_save_query,GROUP=LINUX;WINDOWS,check_query=CREATE INDEX beer_index_sec on `beer`(meta().id)
    #test_save_query,path=,GROUP=LINUX;WINDOWS,check_query=CREATE INDEX beer_index_sec on `beer`(meta().id)
    #test_save_query,path=blablabla.json,GROUP=LINUX;WINDOWS,check_query=blaaaaaaaaa
    #test_save_result,GROUP=LINUX;WINDOWS,expected_result=
    #test_save_result,GROUP=LINUX;WINDOWS,check_query=CREATE INDEX beer_index_sec on `beer`(meta().id),expected_result={\n  "results": \[\],\n  "metrics": {\n    "elapsedTime": "\d+.\d+s",\n    "executionTime": "\d+\.\d+s",\n    "resultCount": 0,\n    "resultSize": 0\n  }\n}
    #test_save_result,path=,GROUP=LINUX;WINDOWS,check_query=CREATE INDEX beer_index_sec on `beer`(meta().id),expected_result={\n  "results": \[\],\n  "metrics": {\n    "elapsedTime": "\d+.\d+s",\n    "executionTime": "\d+\.\d+s",\n    "resultCount": 0,\n    "resultSize": 0\n  }\n}
    #test_save_result,path=blablabla.json,GROUP=LINUX;WIND