# This test is for eventing sanity
eventing.eventing_sanity.EventingSanity.test_create_mutation_for_dcp_stream_boundary_from_beginning,nodes_init=4,services_init=kv-eventing-index-n1ql,dataset=default,groups=simple,reset_services=True,skip_cleanup=True
eventing.eventing_sanity.EventingSanity.test_source_doc_mutations_with_timers,nodes_init=4,services_init=kv-eventing-index-n1ql,dataset=default,groups=simple,reset_services=True,skip_cleanup=True,source_bucket_mutation=true
eventing.eventing_sanity.EventingSanity.test_pause_resume_execution,nodes_init=4,services_init=kv-eventing-index-n1ql,dataset=default,groups=simple,reset_services=True,skip_cleanup=True
eventing.eventing_curl.EventingCurl.test_curl_with_different_handlers,nodes_init=2,services_init=kv-eventing,dataset=default,reset_services=True,skip_cleanup=True,host=local,handler_code=handler_code/curl/bucket_op_curl_get_cookies.js,cookies=allow,curl_user=Administrator,curl_password=password,auth_type=basic

# Sanity test for Index Partitioning
2i.gsi_index_partitioning.GSIIndexPartitioningTests.test_index_scans,items=10000,nodes_init=4,services_init=kv:n1ql-index-index-index,groups=simple,reset_services=True,doc-per-day=1,dataset=bigdata,create_primary_index=False

# XDCR
# Advance Filtering
xdcr.advFilteringXDCR.XDCRAdvFilterTests.test_xdcr_with_filter,items=100,rdirection=unidirection,ctopology=chain,replication_type=xmem,default@C1=filter_expression:REGEXP_CONTAINS(META()dotidcomma'0$'),failure_restart_interval:20,timeout_percentage:60
# Prioritization of replications
xdcr.prioritizationXDCR.XDCRPrioritization.test_priority,initial=True,items=100000,rdirection=unidirection,ctopology=chain,replication_type=xmem,standard_buckets=1,default@C1=priority:Medium,standard_bucket_1@C1=priority:High

# n1ql+fts integration
tuqquery.n1ql_fts_integration_phase2.N1qlFTSIntegrationPhase2Test.test_n1ql_syntax_select_from_let,nodes_init=1,services_init=kv,index,fts,n1ql,reset_services=True
